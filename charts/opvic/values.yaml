# Default values for opvic.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

# Control plane token to use for authenticating agent requests.
# Needs to be set on control plane and agents.
sharedAuthentication:
  token: ""
  existingSecret: ""

controlplane:
  enabled: false
  # keep this values as 1 since the controlplane only supports in memory cache for now
  replicaCount: 1
  image:
    repository: "ghcr.io/skillz/opvic"
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    # set to canary for the latest unreleased version
    tag: "canary"

  # Control plane cache configuration
  cache:
    expiration: "1h"
    reconcilerInterval: "1m"

  log:
    level: "info"
    logHttpRequests: false

  providers:
    # Github provider for remote version tracking
    # Since the Github API rate limit for unauthenticated requests is 60 per hour,
    # we recommend you to use a Github PAT or Github App to authenticate against Github.
    github:
      createSecret: false
      existingSecret: ""
      token: ""
      appId: ""
      appInstallationId: ""
      appPrivateKey: ""
      # appPrivateKey: |-
      #   -----BEGIN RSA PRIVATE KEY-----
      #   -----END RSA PRIVATE KEY-----

  # Extra environment variables to pass to the Control plane
  extraEnv: ""
  # extraEnv: |
  #   - name: MY_ENV_VAR
  #     value: MY_VALUE

  # Extra envFrom to pass to the Control plane
  extraEnvFrom: ""
  # extraEnvFrom: |
  #   - secretRef:
  #       name: secret-name

  # Init Containers for Control plane
  initContainers: []

  # serviceAccount for Control plane
  serviceAccount:
    # Specifies whether a service account should be created
    create: false
    # Annotations to add to the service account
    annotations: {}
    # The name of the service account to use.
    # If not set and create is true, a name is generated using the fullname template
    name: ""

  podAnnotations: {}

  podSecurityContext: {}
    # fsGroup: 2000

  securityContext: {}
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000

  service:
    type: ClusterIP
    port: 80

  ingress:
    enabled: false
    className: ""
    annotations: {}
      # kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"
    hosts:
      - host: chart-example.local
        paths:
          - path: /
            pathType: ImplementationSpecific
    tls: []
    #  - secretName: chart-example-tls
    #    hosts:
    #      - chart-example.local

  resources:
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

  nodeSelector: {}

  tolerations: []

  affinity: {}

agent:
  enabled: false
  replicaCount: 1
  image:
    repository: "ghcr.io/skillz/opvic-agent"
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    # set to canary for the latest unreleased version
    tag: "canary"

  # Agent unique id across all clusters
  identifier: ""

  # How often check the VersionTracker resources and ship the information to the Control plane
  reconcilerInterval: "1m"

  # URL to the the collected information.
  # if not set and control plane is enabled it defaults to http://<controlplane-sevice>.svc
  controlPlaneURL: ""

  # tags to add to the agent payload
  tags: ""
  # tags: |
  #   key1=value1
  #   key2=value2

  log:
    level: "info"

  # Extra environment variables to pass to the Agent
  extraEnv: ""
  # extraEnv: |
  #   - name: MY_ENV_VAR
  #     value: MY_VALUE

  # Extra envFrom to pass to the Agent
  extraEnvFrom: ""
  # extraEnvFrom: |
  #   - secretRef:
  #       name: secret-name

  # Init Containers for Agent
  initContainers: []

  # serviceAccount for Agent
  serviceAccount:
    # Specifies whether a service account should be created
    create: true
    # Annotations to add to the service account
    annotations: {}
    # The name of the service account to use.
    # If not set and create is true, a name is generated using the fullname template
    name: ""

  podAnnotations: {}

  podSecurityContext: {}
    # fsGroup: 2000

  securityContext: {}
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000

  # metrics service
  service:
    type: ClusterIP
    port: 80

  resources:
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

  nodeSelector: {}

  tolerations: []

  affinity: {}

# List of VersionTrackers definitions.
versionTrackers: []
# - name: aws-vpc-cni
#   resources:
#     namespaces:
#       - kube-system
#     selector:
#       matchLabels:
#       app.kubernetes.io/name: aws-node
#   localVersion:
#     strategy: ImageTag
#   remoteVersion:
#     provider: github
#     strategy: releases
#     repo: aws/amazon-vpc-cni-k8s
#     extraction:
#       regex:
#         pattern: ^v([0-9]+\.[0-9]+\.[0-9]+)$
#         result: $1

